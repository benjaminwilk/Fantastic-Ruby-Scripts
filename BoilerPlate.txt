#Anything that needs the CommonLib.rb library should just start from here
#Version 1.0
#Initial version

common = `find /home/nex*/CommonLib.rb`.strip
if common.empty? == false
    `mv #{common} ~`
else
   `wget -q goo.gl/VyGXf; chmod u+x CommonLib.rb;`
end

if File.read("./CommonLib.rb").grep(/#COMMONLIB VERSION 0.610/).any? == false
   puts "Looks like you're using an out of date version of Commonlib..."
   `rm -rf /home/nex*/CommonLib.rb`
   `wget -q goo.gl/VyGXf; chmod u+x CommonLib.rb;`
else 
  print "You are running "
  puts File.read("./CommonLib.rb").grep(/#COMMONLIB VERSION */).to_s.gsub(/#/,'').downcase 
end

 require "CommonLib.rb"



#Version 2.0
#Big revision.  Added in some proper coding ideas (commonlib version is a variable rather than a random value) 

commonlib_version = "0.63"
user_location = `pwd|awk -F'/' '{print $4}'`.to_s.strip
#common_locator = `ls /home/*/CommonLib.rb`.strip
common_locator = `locate CommonLib.rb`.strip

  if common_locator.empty? == true
 #    `wget -q goo.gl/VyGXf; chmod u+x CommonLib.rb;`
     `wget -q https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb; chmod u+x CommonLib.rb`
  else
    commonlib_location = `ls #{common_locator} | awk -F'/' '{print $3}'`.to_s.strip
   if user_location != commonlib_location
      `mv #{common_locator} ~`
   else
    ;
   end
  end

running_version = File.read("./CommonLib.rb").match(/#COMMONLIB VERSION.*/).to_s.split(' ').slice!(2).to_s

  if running_version != commonlib_version
     puts "Looks like you're using an out of date version of Commonlib..."
     `rm -rf /home/nex*/CommonLib.rb`
 #    `wget -q goo.gl/VyGXf; chmod u+x CommonLib.rb;`
     `wget -q https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb; chmod u+x CommonLib.rb`
  elsif running_version == commonlib_version 
   puts "You are running #{running_version}"
  else 
    print "Ehhh.... \n"
     `rm -rf /home/nex*/CommonLib.rb` 
#     `wget -q goo.gl/VyGXf; chmod u+x CommonLib.rb;`
     `wget -q https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb; chmod u+x CommonLib.rb`
  end

require './CommonLib.rb'


#Version 2.5
#Replaced the wgets with curls which don't get hit with that annoying certificate error.  Also removed that condition that would never occur at the very bottom.  

commonlib_version = "0.651"
user_location = `pwd|awk -F'/' '{print $4}'`.to_s.strip
common_locator = `ls /home/*/CommonLib.rb`.strip
  if common_locator.empty? == true
     `curl --silent https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb > CommonLib.rb; chmod u+x CommonLib.rb`
  else
    commonlib_location = `ls #{common_locator} | awk -F'/' '{print $3}'`.to_s.strip
   if user_location != commonlib_location
      `mv #{common_locator} ~`
   else
    ;
   end
  end
running_version = File.read("./CommonLib.rb").match(/#COMMONLIB VERSION.*/).to_s.split(' ').slice!(2).to_s
  if running_version != commonlib_version
     puts "Looks like you're using an out of date version of Commonlib..."
     `rm -rf /home/nex*/CommonLib.rb`
     `curl --silent https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb > CommonLib.rb; chmod u+x CommonLib.rb`
   elsif running_version == commonlib_version
    puts  "You are running #{running_version}"
  end
require './CommonLib.rb'

#Version 2.85
#Stopped bothing trying to move the CommonLib file to the current directory, now it scans your home directory, if it isn't there, downloads it and moves on.  If it is there, checks version, if it's out of date, deletes it, and downloads new version.  
#Instead of manually changing the version on each file, I've linked the version to a file on my website which will then compare the version of commonlib on the server
#Added -k to bypass annoying "No Certificate error" that pops up randomly

commonlib_version = `curl http://benwilk.com/CommonVersion.html`.strip
common_locator = `ls ~/CommonLib.rb`.strip
  if common_locator.empty? == true
     `curl -k --silent https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb > CommonLib.rb; chmod u+x CommonLib.rb`
  end
running_version = File.read("./CommonLib.rb").match(/#COMMONLIB VERSION.*/).to_s.split(' ').slice!(2).to_s
  if running_version != commonlib_version
     puts "Looks like you're using an out of date version of Commonlib..."
     `rm -rf /home/nex*/CommonLib.rb `
     `curl -k --silent https://raw.github.com/securitygate/Fantastic-Ruby-Scripts/master/CommonLib.rb > CommonLib.rb; chmod u+x CommonLib.rb`
   else #running_version == commonlib_version
    puts  "You are running #{running_version}"
  end
require './CommonLib.rb'

